{"version":3,"sources":["src/Engine/makeInteractive.tsx","src/Engine/Container.tsx","src/Engine/Timer.ts","src/Engine/EngineContex.tsx","src/Engine/Engine.tsx","src/Game/Entities/Vertex.tsx","src/Game/Systems/move.ts","App.tsx","web-build/register-service-worker.js"],"names":["interactivePropTypes","id","PropTypes","oneOfType","string","number","isRequired","onInteract","func","elementPropTypes","onMouseDown","onMouseMove","onMouseUp","onTouchStart","onTouchMove","onTouchEnd","_Container","x","y","style","props","View","position","left","top","propTypes","Element","ContainerPropTypes","object","Container","otherProps","useState","undefined","startPositions","setStartPositions","buildEvent","type","event","positions","pageX","nativeEvent","pageY","locationX","offsetX","locationY","offsetY","start","downPositions","Platform","OS","mouseDown","setMouseDown","handleMouseUp","useEffect","mouseUpListener","mouseMoveListener","window","addEventListener","removeEventListener","preventDefault","Timer","subscribers","running","loop","time","loopId","forEach","callback","requestAnimationFrame","this","Date","now","cancelAnimationFrame","indexOf","push","filter","s","EngineContext","createContext","entities","systems","array","timer","Engine","state","events","prevMs","timerHandler","currentMs","states","deltaMs","newEntities","reduce","prev","system","setState","stop","handleInteraction","UNSAFE_componentWillReceiveProps","nextProps","subscribe","Provider","value","Object","entries","map","Component","key","React","Vertex","width","height","backgroundColor","move","entity","App","setRunning","styles","container","Text","Button","title","onPress","1","2","StyleSheet","create","flex","alignItems","justifyContent","navigator","serviceWorker","register","scope","then","info","catch","error","console"],"mappings":"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","file":"static/js/app.004ce478.chunk.js","sourcesContent":["import {Platform} from 'react-native'\nimport React, {ComponentType, FunctionComponent, SyntheticEvent, useEffect, useState} from 'react'\nimport PropTypes from 'prop-types'\n\nexport const interactivePropTypes = {\n  id: PropTypes.oneOfType([PropTypes.string, PropTypes.number]).isRequired,\n  onInteract: PropTypes.func\n}\n\nexport const elementPropTypes = {\n  onMouseDown: PropTypes.func,\n  onMouseMove: PropTypes.func,\n  onMouseUp: PropTypes.func,\n  onTouchStart: PropTypes.func,\n  onTouchMove: PropTypes.func,\n  onTouchEnd: PropTypes.func,\n}\n\nexport type InteractType = 'down' | 'move' | 'up' | 'press'\n\nexport interface Positions {\n  pageX: number\n  pageY: number\n  locationX: number\n  locationY: number\n}\n\nexport interface InteractEvent {\n  id: string | number\n  type: InteractType\n  event: SyntheticEvent\n  positions: Positions,\n  downPositions?: Positions\n}\n\nexport type ElementProps = PropTypes.InferProps<typeof elementPropTypes>\n\nexport interface InteractiveProps {\n  id: string | number\n  onInteract?: (event: InteractEvent) => unknown\n}\n\nexport const makeInteractive = (Element: ComponentType<ElementProps>): FunctionComponent<InteractiveProps> => {\n  return (props: InteractiveProps) => {\n    const {onInteract, id, ...otherProps} = props\n    const [startPositions, setStartPositions] = useState<Positions|undefined>(undefined)\n    const buildEvent = (type: InteractType, event: any): InteractEvent => {\n      const positions = {\n        // @ts-ignore\n        pageX: event.nativeEvent.pageX,\n        // @ts-ignore\n        pageY: event.nativeEvent.pageY,\n        // @ts-ignore\n        locationX: event.nativeEvent.locationX || event.nativeEvent.offsetX || 0,\n        // @ts-ignore\n        locationY: event.nativeEvent.locationY || event.nativeEvent.offsetY || 0,\n      }\n\n      const start  = type === 'down' ? positions : startPositions\n      if(type === 'up'){\n        setStartPositions(undefined)\n      }\n      if(type === 'down'){\n        setStartPositions(positions)\n      }\n\n      return ({\n        id,\n        type,\n        event,\n        positions,\n        downPositions: start\n      })\n    }\n    if (Platform.OS !== 'web') {\n      return <Element\n        onTouchStart={event => onInteract?.(buildEvent('down', event))}\n        onTouchMove={event => onInteract?.(buildEvent('move', event))}\n        onTouchEnd={event => onInteract?.(buildEvent('up', event))}\n        {...props}\n      />\n    } else {\n      const [mouseDown, setMouseDown] = useState(false)\n      const handleMouseDown = (event: SyntheticEvent) => {\n        setMouseDown(true)\n        onInteract?.(buildEvent('down', event))\n      }\n      // const handleMouseMove = (event: SyntheticEvent) => {\n      //   // console.log(event.nativeEvent)\n      //   if (mouseDown) {\n      //     onInteract?.(buildEvent('move', event))\n      //   }\n      // }\n      const handleMouseUp = (event: SyntheticEvent) => {\n        if (mouseDown) {\n          setMouseDown(false)\n          onInteract?.(buildEvent('up', event))\n        }\n      }\n      const handleTouchEnd = (event: SyntheticEvent) => {\n        event.preventDefault()\n        onInteract?.(buildEvent('up', event))\n      }\n      useEffect(() => {\n        const mouseUpListener = (event: MouseEvent) => {\n          if (mouseDown) {\n            setMouseDown(false)\n            onInteract?.(buildEvent('up', {\n              nativeEvent: event\n            }))\n          }\n        };\n        const mouseMoveListener = (event: MouseEvent) => {\n          if (mouseDown) {\n            onInteract?.(buildEvent('move', {\n              nativeEvent: event\n            }))\n          }\n        };\n        window.addEventListener('mouseup', mouseUpListener)\n        window.addEventListener('mousemove', mouseMoveListener)\n        return () => {\n          window.removeEventListener('mouseup', mouseUpListener)\n          window.removeEventListener('mousemove', mouseMoveListener)\n        }\n      }, [handleMouseUp])\n      return <Element\n        {...otherProps}\n        onMouseDown={handleMouseDown}\n        // onMouseMove={handleMouseMove}\n        onMouseUp={handleMouseUp}\n        // onMouseLeave={handleMouseUp}\n        onTouchStart={event => onInteract?.(buildEvent('down', event))}\n        onTouchMove={event => onInteract?.(buildEvent('move', event))}\n        onTouchEnd={handleTouchEnd}\n      />\n    }\n  }\n}\n","import React, {FunctionComponent} from 'react'\nimport {View} from 'react-native'\nimport {elementPropTypes, InteractiveProps, interactivePropTypes, makeInteractive} from './makeInteractive'\nimport PropTypes from 'prop-types'\n\nconst _Container = ({ x = 0, y = 0, style={}, ...props }) => <View\n  style={{\n    position: 'absolute',\n    left: x,\n    top: y,\n    ...style\n  }}\n  {...props}\n/>\n\n_Container.propTypes = {\n  ...elementPropTypes,\n  x: PropTypes.number,\n  y: PropTypes.number\n}\n\n\nexport const ContainerPropTypes = {\n  ...interactivePropTypes,\n  x: PropTypes.number,\n  y: PropTypes.number,\n  style: PropTypes.object\n};\nexport type ContainerProps = PropTypes.InferProps<typeof ContainerPropTypes> | InteractiveProps;\nconst Container: FunctionComponent<ContainerProps> = makeInteractive(_Container);\nContainer.propTypes = ContainerPropTypes\n\nexport default Container\n","/*\nWith thanks, https://github.com/FormidableLabs/react-game-kit/blob/master/src/native/utils/game-loop.js\n*/\n\n/*\nThe MIT License (MIT)\n\nCopyright (c) 2013\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n*/\n\nexport type TimerSubscriber = (currentMs: number) => unknown\n\nexport class Timer {\n  private subscribers: TimerSubscriber[] = []\n  private loopId?: number\n  private running: boolean = false\n\n  constructor() {\n    this.subscribers = [];\n    this.loopId = undefined;\n  }\n\n  public loop = (time: number) => {\n    if (this.loopId !==undefined) {\n      this.subscribers.forEach(callback => {\n        callback(time);\n      });\n    }\n\n    this.loopId = requestAnimationFrame(this.loop);\n  };\n\n  public start() {\n    if (!this.loopId) {\n      this.loop(Date.now());\n    }\n    this.running = true\n  }\n\n  public stop() {\n    if (this.loopId) {\n      cancelAnimationFrame(this.loopId);\n      this.loopId = undefined;\n    }\n    this.running = false\n  }\n\n  public subscribe(callback: TimerSubscriber) {\n    if (this.subscribers.indexOf(callback) === -1)\n      this.subscribers.push(callback);\n  }\n\n  public unsubscribe(callback: TimerSubscriber) {\n    this.subscribers = this.subscribers.filter(s => s !== callback)\n  }\n\n  public isRunning(){\n    return this.running\n  }\n}\n","import {createContext} from \"react\";\n\nexport const EngineContext = createContext<null>(null)\n","import React, {Component} from 'react'\nimport Container from './Container'\nimport {Timer} from './Timer'\nimport {Entity} from \"./Entity\";\nimport PropTypes from 'prop-types'\nimport {EngineContext} from './EngineContex';\nimport {InteractEvent} from \"./makeInteractive\";\n\nconst propTypes = {\n  entities: PropTypes.object,\n  systems: PropTypes.array,\n  timer: PropTypes.object\n}\n\nexport type Entities = { [id: string]: Entity }\n\nexport interface SystemStates {\n  events: Array<InteractEvent>,\n  currentMs: number,\n  deltaMs: number\n}\n\nexport type System = (entities: Entities, states: SystemStates) => Entities\n\ninterface Props {\n  entities?: Entities\n  systems?: Array<System>\n  timer?: Timer\n  running?: boolean\n}\n\nexport class Engine extends React.Component<Props> {\n  systems: Array<System>\n  timer: Timer\n  state: { entities: Entities } = {entities: {}}\n  events: Array<InteractEvent> = []\n  prevMs: number = 0\n  static propTypes = propTypes\n\n  constructor(props: Props) {\n    super(props);\n    this.state.entities = props.entities || {}\n    this.systems = props.systems ?? []\n    this.timer = new Timer()\n    this.timer.subscribe(this.timerHandler)\n    if (props.running === true) {\n      this.timer.start()\n    }\n  }\n\n  timerHandler = (currentMs: number) => {\n    const states: SystemStates = {\n      events: this.events,\n      currentMs,\n      deltaMs: currentMs - this.prevMs\n    }\n    // console.log(entities)\n    const newEntities = this.systems.reduce((prev, system) => system(prev, states), this.state.entities)\n    // console.log(newEntities)\n    this.events = []\n    this.setState({entities: newEntities})\n    this.timer?.stop()\n    this.prevMs = currentMs\n  }\n\n  handleInteraction = (event: InteractEvent) => {\n    this.events.push(event)\n  }\n\n  UNSAFE_componentWillReceiveProps = (nextProps: Readonly<Props>) => {\n    if (nextProps.running !== false) {\n      if (this.props.running !== nextProps.running) {\n        this.events = []\n        this.timer.start()\n      }\n    } else {\n      this.timer.stop()\n    }\n  }\n\n  render() {\n    return <EngineContext.Provider value={null}>\n      <Container id='root'>\n        {Object.entries(this.state.entities).map(([id, {Component, ...props}]) => <Component key={id} id={id}\n                                                                                             onInteract={this.handleInteraction} {...props}/>)}\n      </Container>\n    </EngineContext.Provider>\n  }\n}\n","import Container, {ContainerProps, ContainerPropTypes} from \"../../Engine/Container\";\nimport React, {FunctionComponent} from \"react\";\nimport PropTypes from 'prop-types'\n\nconst Vertex: FunctionComponent<ContainerProps&{style?: object}> = ({style, ...props}) => {\n  return <Container {...props} style={{\n    width: 16,\n    height: 16,\n    backgroundColor: 'pink',\n    ...style\n  }}/>\n}\n\nVertex.propTypes = {\n  ...ContainerPropTypes,\n  style: PropTypes.object\n}\n\nexport default Vertex\n","import {System} from \"../../Engine/Engine\";\n\nexport const move: System = (entities, {events}) => {\n  const movingEntities = events.filter(({type}) => type === 'move')\n  movingEntities.forEach((event) => {\n    const entity = entities[event.id]\n    if(event.downPositions){\n      entity.x = event.positions.pageX - event.downPositions.locationX\n      entity.y =  event.positions.pageY - event.downPositions.locationY\n    }\n  })\n  return entities\n}\n","import React, {useState} from 'react';\nimport {Button, StyleSheet, Text, View} from 'react-native';\nimport {Engine} from \"./src/Engine/Engine\";\nimport Vertex from \"./src/Game/Entities/Vertex\";\nimport {move} from \"./src/Game/Systems/move\";\nimport Container from \"./src/Engine/Container\";\n\nexport default function App() {\n  const [running, setRunning] = useState(true)\n  return (\n    <View style={styles.container}>\n      <Text>Open up App.tsx to start working on your app!</Text>\n      <Button title={(running ? 'pause' : 'resume')} onPress={() => setRunning(!running)}/>\n      <Engine entities={{\n        1: {x: 50, y: 50, style: {backgroundColor: 'black'}, Component: Vertex},\n        2: {x: 200, y: 200, style:{width: 100, height: 100, backgroundColor: 'pink'}, Component: Container}\n      }} systems={[move]} running={running}/>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n});\n","/* eslint-env browser */\n\nif ('serviceWorker' in navigator) {\n  window.addEventListener('load', function () {\n    navigator.serviceWorker\n      .register('/expo-game-template/expo-service-worker.js', { scope: '/expo-game-template/' })\n      .then(function (info) {\n        // console.info('Registered service-worker', info);\n      })\n      .catch(function (error) {\n        console.info('Failed to register service-worker', error);\n      });\n  });\n}\n"],"sourceRoot":""}